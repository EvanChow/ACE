<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="GroupMapper" >
  <resultMap id="BaseResultMap" type="com.avalon.model.sys.Group" >
    <result column="GROUPID" property="groupid" jdbcType="VARCHAR" />
    <result column="GROUPNAME" property="groupname" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="GROUPDESC" property="groupdesc" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    GROUPID, GROUPNAME, STATUS, GROUPDESC
  </sql>
  
  <sql id="SQL_WHERE">
      1=1
      <if test="groupid != null and groupid != '' ">
        and groupid=#{groupid,jdbcType=VARCHAR}
      </if>
      <if test="groupname != null and groupname != ''" >
        and groupname=#{groupname,jdbcType=VARCHAR}
      </if>
      <if test="status != null" >
        and status=#{status,jdbcType=INTEGER}
      </if>
      <if test="groupdesc != null and groupdesc != '' " >
        and groupdesc=#{groupdesc,jdbcType=VARCHAR}
      </if>
   </sql>
   <sql id="SQL_PAGING">
      <if test="sort != null  and sort != ''" >
      order by  #{sort}
      </if>
      <if test="order != null  and order != ''" >
       #{order}
      </if>
	  LIMIT #{limit},#{offset}
  </sql>
  
  <select id="select"  parameterType="com.avalon.model.sys.Group" resultMap="BaseResultMap">
   select <include refid="Base_Column_List"/>
    from sys_group t
   <where>
	    <include refid="SQL_WHERE"/>
   </where>
 </select>
 
  <delete id="delete" parameterType="com.avalon.model.sys.Group" >
    delete from sys_group where GROUPID in (${groupid})
  </delete>
  
  <select id="DataPagination" parameterType="com.avalon.model.sys.Group" resultMap="BaseResultMap">
    select t.* from sys_group t
	   <where>
	    <include refid="SQL_WHERE"/>
	   </where>
	   <include refid="SQL_PAGING"/>
  </select>
  
  <select id="DataPaginationCount" parameterType="com.avalon.model.sys.Group" resultType="java.lang.Integer">
     select count(1) from sys_group t
     <where>
	    <include refid="SQL_WHERE"/>
	 </where>
  </select>
 
  <insert id="insert" parameterType="com.avalon.model.sys.Group" >
    insert into sys_group (GROUPID, GROUPNAME, STATUS, 
      GROUPDESC)
    values (#{groupid,jdbcType=VARCHAR}, #{groupname,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{groupdesc,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="com.avalon.model.sys.Group" >
    insert into sys_group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="groupid != null" >
        GROUPID,
      </if>
      <if test="groupname != null" >
        GROUPNAME,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="groupdesc != null" >
        GROUPDESC,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="groupid != null" >
        #{groupid,jdbcType=VARCHAR},
      </if>
      <if test="groupname != null" >
        #{groupname,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="groupdesc != null" >
        #{groupdesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByGroupidSelective" parameterType="com.avalon.model.sys.Group" >
    update sys_group
    <set >
      <if test="groupname != null" >
        GROUPNAME = #{groupname,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="groupdesc != null" >
        GROUPDESC = #{groupdesc,jdbcType=VARCHAR},
      </if>
    </set>
    where GROUPID = #{groupid,jdbcType=VARCHAR}
  </update>
  <update id="updateByGroupid" parameterType="com.avalon.model.sys.Group" >
    update sys_group
    set GROUPID = #{groupid,jdbcType=VARCHAR},
      GROUPNAME = #{groupname,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      GROUPDESC = #{groupdesc,jdbcType=VARCHAR}
  </update>
  
  
</mapper>